{"version":3,"sources":["movingbubbles.js","App.js","serviceWorker.js","index.js"],"names":["MovingBubbles","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","maxBubbles","timer","tick","bubbles","bubblesContainer","width","height","backgroundColor","boxShadow","opacity","left","top","hue","hueRand","saturation","saturationRand","light","lightRand","opacityFactor","minOpacity","ratio","instantiateBubbles","bubbleLength","Math","floor","window","innerWidth","innerHeight","i","bubbleElem","react_default","a","createElement","id","bubble","createBubble","push","e","time","x","random","y","xVel","yVel","diam","hsla","min","max","_this2","interval","setInterval","map","length","key","style","setState","clearInterval","Component","App","Fragment","movingbubbles","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0cb3312a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass MovingBubbles extends Component {\r\n  state = {\r\n    maxBubbles: 250,\r\n    timer: -1,\r\n    tick: 100,\r\n    bubbles: [],\r\n    bubblesContainer: [],\r\n    width: [],\r\n    height: [],\r\n    backgroundColor: [],\r\n    boxShadow: [],\r\n    opacity: [],\r\n    left: [],\r\n    top: [],\r\n    hue: 188,\r\n    hueRand: 20,\r\n    saturation: 63,\r\n    saturationRand: 10,\r\n    light: 57,\r\n    lightRand: 10,\r\n    opacityFactor: 3,\r\n    minOpacity: 0.1,\r\n    ratio: 45000,\r\n    instantiateBubbles() {\r\n      const bubbles = [];\r\n      const bubbleLength = Math.floor(\r\n        (window.innerWidth * window.innerHeight) / this.ratio\r\n      );\r\n      for (let i = 0; i < bubbleLength; i++) {\r\n        const bubbleElem = <div id={\"bubble\" + i} />;\r\n        const bubble = this.bubble(bubbleElem);\r\n        this.createBubble(bubble);\r\n        bubbles.push(bubble);\r\n      }\r\n      return bubbles;\r\n    },\r\n    createBubble(e) {\r\n      e.time = 0;\r\n      e.x = Math.random() * window.innerWidth;\r\n      e.y = Math.random() * window.innerHeight;\r\n      e.xVel = Math.random() * 4 - 2;\r\n      e.yVel = Math.random() * 4 - 2;\r\n      e.diam = Math.floor(Math.random() * 160) + 40;\r\n      const id = e.e.props.id;\r\n      this.width[id] = e.diam + \"px\";\r\n      this.height[id] = e.diam + \"px\";\r\n      const hue = Math.floor(Math.random() * this.hueRand) + this.hue;\r\n      const saturation =\r\n        Math.floor(Math.random() * this.saturationRand) + this.saturation;\r\n      const light = Math.floor(Math.random() * this.lightRand) + this.light;\r\n      const opacity = Math.min(\r\n        Math.max(Math.random() / this.opacityFactor, this.minOpacity),\r\n        1\r\n      );\r\n      const hsla =\r\n        \"hsla(\" + hue + \",\" + saturation + \"%,\" + light + \"%,\" + opacity + \")\";\r\n      this.backgroundColor[id] = hsla;\r\n      this.boxShadow[id] =\r\n        \"0 0 \" + (Math.floor(Math.random() * 10) + 5) + \"px \" + hsla;\r\n      this.opacity[id] = \"0\";\r\n    },\r\n    bubble(e) {\r\n      return {\r\n        x: 0,\r\n        y: 0,\r\n        xVel: 0,\r\n        yVel: 0,\r\n        time: 0,\r\n        e: e,\r\n        diam: 0\r\n      };\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state.bubbles = this.state.instantiateBubbles();\r\n  }\r\n\r\n  render() {\r\n    return <div id=\"bubbleContainer\">{this.state.bubblesContainer}</div>;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => {\r\n      const bubbles = this.state.bubbles.map(bubble => {\r\n        const id = bubble.e.props.id;\r\n        if (\r\n          bubble.x + bubble.diam < 0 ||\r\n          bubble.x > window.innerWidth ||\r\n          bubble.y + bubble.diam < 0 ||\r\n          bubble.y - bubble.diam > window.innerHeight\r\n        ) {\r\n          this.state.createBubble(bubble);\r\n        } else {\r\n          if (bubble.time < 11) this.state.opacity[id] = bubble.time / 10;\r\n          bubble.x += bubble.xVel;\r\n          bubble.y += bubble.yVel;\r\n          this.state.left[id] = Math.floor(bubble.x) + \"px\";\r\n          this.state.top[id] = Math.floor(bubble.y) + \"px\";\r\n          bubble.time++;\r\n        }\r\n        if (this.state.bubblesContainer.length < this.state.bubbles.length) {\r\n          return (\r\n            <div\r\n              id={id}\r\n              key={id}\r\n              style={{\r\n                width: this.state.width[id],\r\n                height: this.state.height[id],\r\n                backgroundColor: this.state.backgroundColor[id],\r\n                boxShadow: this.state.boxShadow[id],\r\n                opacity: this.state.opacity[id],\r\n                left: this.state.left[id],\r\n                top: this.state.top[id]\r\n              }}\r\n            />\r\n          );\r\n        }\r\n      });\r\n      this.setState({ bubblesContainer: [bubbles] });\r\n    }, this.state.tick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n}\r\n\r\nexport default MovingBubbles;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport MovingBubbles from \"./movingbubbles\";\nimport \"./movingbubbles.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <MovingBubbles />\n        <p1>לבונבון המתוק שלי</p1>\n        <p2>מאחל לך את כול הטוב שבעולם</p2>\n        <p3>שתמיד תחייכי ותיהי מאושרת</p3>\n        <p3>אוהב מפה ועד עין יהב, אילן</p3>\n        <p4>❤❤❤❤❤❤❤</p4>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}